server {
    listen       80;
    server_name  wad.hp.php9.cc;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        # react项目
        root   /usr/share/nginx/html/reactpwa/build;
        # 原生项目
        # root   /usr/share/nginx/html/comhtml;
        index index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        # react项目
        root   /usr/share/nginx/html/reactpwa/build;
        # 原生项目
        # root   /usr/share/nginx/html/comhtml;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

# ssl
server {
    listen 443;
    server_name wad.hp.php9.cc; #填写绑定证书的域名
    ssl on;
	ssl_certificate /etc/nginx/conf.d/hp.php9.cc.crt;
	ssl_certificate_key /etc/nginx/conf.d/hp.php9.cc.key;
	ssl_session_timeout  5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
    ssl_prefer_server_ciphers on;
    location / {
        # react项目
        root   /usr/share/nginx/html/reactpwa/build;
        # 原生项目
        # root   /usr/share/nginx/html/comhtml;
        index index.html;

                    #这里是编写监听到的请求所转发的端口号，即tomcat端口
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # Socket.IO Support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}
}